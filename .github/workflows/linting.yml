name: Lint and Analyze Code from ZIP

on:
  push:
    paths:
      - "**.zip"

permissions:
  contents: write

jobs:
  process-zip:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Find Latest Zip File
        id: find_zip
        run: |
          latest_zip=$(ls -t | grep '\.zip$' | head -n 1)
          echo "latest_zip=$latest_zip" >> $GITHUB_ENV

      - name: Unzip and Extract Relevant Folders
        run: |
          unzip -o "$latest_zip" -d extracted
          mkdir -p extracted_code
          find extracted -type d -name "masterbot" -o -name "microbots" | while read dir; do
            cp -r "$dir" extracted_code/
          done

      - name: Detect Language
        id: detect_language
        run: |
          cd extracted_code
          if find . -type f -name "*.py" | grep -q .; then
            echo "language=python" >> $GITHUB_ENV
          elif find . -type f -name "*.sh" | grep -q .; then
            echo "language=bash" >> $GITHUB_ENV
          elif find . -type f -name "*.ps1" | grep -q .; then
            echo "language=powershell" >> $GITHUB_ENV
          else
            echo "language=unknown" >> $GITHUB_ENV
          fi

      - name: Install Dependencies
        run: |
          case "$language" in
            python) pip install pylint;;
            bash) sudo apt-get install -y shellcheck;;
            powershell) sudo apt-get install -y powershell;;
          esac

      - name: Perform Linting
        run: |
          mkdir -p reports
          TIMESTAMP=$(date +%s)
          REPORT_FILE="reports/lint_report_${TIMESTAMP}.html"

          case "$language" in
            python)
              pylint extracted_code/**/*.py --output-format=parseable | tee "$REPORT_FILE"
              ;;
            bash)
              find extracted_code -type f -name "*.sh" -exec shellcheck {} + | tee "$REPORT_FILE"
              ;;
            powershell)
              pwsh -Command "Get-ChildItem -Path extracted_code -Recurse -Filter '*.ps1' | Invoke-ScriptAnalyzer | ConvertTo-Html | Out-File $REPORT_FILE"
              ;;
            *)
              echo "<html><body><h2>No supported language found.</h2></body></html>" > "$REPORT_FILE"
              ;;
          esac

      - name: Commit and Push Report
        run: |
          branch_name=${{ github.ref_name }}
          mkdir -p reports_dir/$branch_name
          mv reports/lint_report_*.html reports_dir/$branch_name/
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add reports_dir/
          git commit -m "Add lint report for latest zip"
          git push origin $branch_name
